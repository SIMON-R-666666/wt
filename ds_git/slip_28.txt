slip_28
import pandas as pd
import numpy as np

# 1. Create a dataframe with columns 'name', 'age', and 'percentage'
data = {
    'name': ['John', 'Alice', 'Bob', 'Eve', 'Charlie', 'Dave', 'Grace', 'Hank', 'Ivy', 'Jake'],
    'age': [21, 22, 23, 21, 24, 22, 23, 21, 22, 24],
    'percentage': [88, 92, 75, 85, 89, 95, 77, 90, 82, 87]
}
df = pd.DataFrame(data)

# View the dataframe
print("Original DataFrame:")
print(df)

# 2. Print shape, number of rows-columns, data types, feature names, and description of the data
print("\nShape of DataFrame:", df.shape)
print("Number of Rows:", df.shape[0])
print("Number of Columns:", df.shape[1])
print("\nData Types:\n", df.dtypes)
print("\nFeature Names (Columns):", df.columns.tolist())
print("\nDescription of the Data:")
print(df.describe())

# 3. View basic statistical details of the data
print("\nBasic Statistical Details:")
print(df.describe())

# 4. Add 5 rows with duplicate and missing values
new_data = {
    'name': ['John', 'Alice', np.nan, 'Jake', 'Grace'],
    'age': [21, np.nan, 23, 24, 23],
    'percentage': [88, 92, np.nan, 87, 77]
}
new_df = pd.DataFrame(new_data)

# Adding a column 'remarks' with empty values
new_df['remarks'] = np.nan

# Append the new rows to the original DataFrame
df = df.append(new_df, ignore_index=True)

# Display the DataFrame with duplicate and missing values
print("\nDataFrame with duplicate and missing values:")
print(df)
